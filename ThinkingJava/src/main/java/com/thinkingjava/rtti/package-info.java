/**
 * Runtime type infomation
 * @author wangwei
 */
package com.thinkingjava.rtti;

/**
 *类型信息:
 *
 *14.1
 * （1）RTTI : 在运行时，识别一个对象的类型；
 * （2）多态编程的基本目标: 你希望大部分代码尽可能少地了解对象的具体类型，
 * 		而只是与对象家族中的一个通用表示打交道，这样的代码更清晰，便于维护。
 * 
 *14.2
 *（1）Class对象操作完成的
 *（2）所有的类都是在对其第一次使用时，动态加载到JVM中。当程序创建第一个对象
 *	  的静态成员的引用的时候，就会加载这个类。这个证明构造器也是类的静态方法，
 * 	  即使在构造器之前并没有static关键字
 *（3）一旦某个类的Class对象被加载到内存，它就被用来创建这个类的所有对象。
 *（4）Class.forName(""):如果类没有被加载就加载它。
 *    在加载的过程中，Gum的static的子句被执行。
 *（5）使用newInstance()来创建的类，必须带有默认的构造器；
 *
**/